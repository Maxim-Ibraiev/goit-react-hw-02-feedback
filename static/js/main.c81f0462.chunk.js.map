{"version":3,"sources":["Section/Section.jsx","Notification/Notification.jsx","Statistics/Statistics.jsx","FeedbackOptions/FeedbackOptions.jsx","App/App.jsx","index.js"],"names":["Section","title","children","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","onClick","name","efaultProps","App","state","handleLeaveFeedback","choice","target","setState","prevStare","this","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCJQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICAE,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,4CACW,IAAVD,EACC,8BACE,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,UAI5B,cAACP,EAAD,CAAcC,QAAS,yBCtBhB,SAASO,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,mCACE,wBAAQC,QAASD,EAAiBE,KAAMH,EAAxC,SACGA,MFATT,EAAaa,YAAc,CACzBZ,QAAS,qB,IGoDIa,E,4MArDbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,oBAAsB,YAAmC,IAAhBC,EAAe,EAA/BC,OAAUN,KACjC,EAAKO,UAAS,SAACC,GACb,OAAO,eAAGH,EAASG,EAAUH,GAAU,O,mEAIrB,IAAD,EACYI,KAAKN,MAEpC,OAHmB,EACXZ,KADW,EACLC,QADK,EACIC,M,wDAKU,IACzBF,EAASkB,KAAKN,MAAdZ,KAER,OAAOmB,KAAKC,MAAOpB,EAAOkB,KAAKG,qBAAwB,KAAO,M,+BAGtD,IAAD,EACwBH,KAAKN,MAA5BZ,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,eAACR,EAAD,CAASC,MAAO,wBAAhB,UACE,cAACU,EAAD,CACEC,QAAS,OACTC,gBAAiBW,KAAKL,sBAExB,cAACR,EAAD,CACEC,QAAS,UACTC,gBAAiBW,KAAKL,sBAExB,cAACR,EAAD,CACEC,QAAS,MACTC,gBAAiBW,KAAKL,sBAExB,cAACd,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,KAAKG,qBACZjB,mBAAoBc,KAAKI,2C,GA/CjBC,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c81f0462.chunk.js","sourcesContent":["import propTypes from \"prop-types\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: propTypes.string,\r\n};\r\n","import propTypes from \"prop-types\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.efaultProps = {\r\n  message: \"No feedback given\",\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: propTypes.string,\r\n};\r\n","import propTypes from \"prop-types\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <h2>Statistics</h2>\r\n      {total !== 0 ? (\r\n        <div>\r\n          <ul>\r\n            <li>Good: {good}</li>\r\n            <li>Neutral: {neutral}</li>\r\n            <li>Bad: {bad}</li>\r\n            <li>Total: {total}</li>\r\n            <li>Positive feedback: {positivePercentage}</li>\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <Notification message={\"No feedback given\"} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: propTypes.number,\r\n  neutral: propTypes.number,\r\n  bad: propTypes.number,\r\n  total: propTypes.number,\r\n  positivePercentage: propTypes.string,\r\n};\r\n","import propTypes from \"prop-types\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      <button onClick={onLeaveFeedback} name={options}>\r\n        {options}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: propTypes.string,\r\n  onLeaveFeedback: propTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\nimport Section from \"../Section/Section\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleLeaveFeedback = ({ target: { name: choice } }) => {\n    this.setState((prevStare) => {\n      return { [choice]: prevStare[choice] + 1 };\n    });\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n\n    return Math.round((good / this.countTotalFeedback()) * 100) + \"%\";\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Section title={\"Please leave feedback\"}>\n        <FeedbackOptions\n          options={\"good\"}\n          onLeaveFeedback={this.handleLeaveFeedback}\n        />\n        <FeedbackOptions\n          options={\"neutral\"}\n          onLeaveFeedback={this.handleLeaveFeedback}\n        />\n        <FeedbackOptions\n          options={\"bad\"}\n          onLeaveFeedback={this.handleLeaveFeedback}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}